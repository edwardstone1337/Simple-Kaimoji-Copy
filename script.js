const kaomojis = {
  cat: [
    "ฅ^•ﻌ•^ฅ",
    "(=^･ω･^=)",
    "(=^･ｪ･^=)",
    "(=①ω①=)",
    "ฅ(＾・ω・＾ฅ)",
    "ฅ(ΦωΦ)ฅ",
    "(=ＴェＴ=)",
    "(=ｘェｘ=)",
    "（=´∇｀=）",
    "(=^･^=)",
    "(=；ェ；=)",
    "(=｀ω´=)",
    "(=｀ェ´=)",
    "（＾・ω・＾✿）",
    "(^-人-^)",
    "(=ΦｴΦ=)",
    "（=´∇｀=）",
    "(=^‥^=)",
    "(=ＴェＴ=)",
    "(=ｘェｘ=)",
    "ฅ•ω•ฅ",
    "ฅ^•ﻌ•^ฅ",
    "ฅ(≚ᄌ≚)",
    "ฅ(•ㅅ•❀)ฅ",
    "ฅ(^ω^ฅ)",
    "ฅ(ﾐ・ᆽ・ﾐ)ฅ",
    "ฅ(ﾐΦ ﻌ Φﾐ)∗",
    "ฅ^•ﻌ•^ฅ",
    "ฅ(• ɪ •)ฅ",
    "ฅ(＾・ω・＾ฅ)",
    "ฅ(º ﻌ ºฅ)",
    "ฅʕ•ᴥ•ʔฅ",
    "ฅ(ﾐ꒡ᆽ꒡ﾐ)ฅ✧",
    "ฅ(ﾐ>ᆽ<ﾐ)∫",
    "ฅ(ﾐ˘ᆽ˘ﾐ)∫",
    "ฅ(ﾐ´ω`ﾐ)ฅ",
    "ฅ(ﾐゝᆽ╹ﾐ)∫",
  ], // Added comma here

  bear: [
    "ʕ•ᴥ•ʔ",
    "ʕっ•ᴥ•ʔっ",
    "ʕºᴥºʔ",
    "ʕ•́ᴥ•̀ʔっ",
    "ʕᴥ• ʔ",
    "ʕ•ᴥ•ʔノ",
    "ʕ º ᴥ ºʔ",
    "ʕ•̫͡•ʔ",
    "ʕ￫ᴥ￩ʔ",
    "ʕ•ᴥ•ʔゝ☆",
    "ʕ ´•ᴥ•`ʔ",
    "ʕ•̫͡•ིʔྀ",
    "ʕ·ᴥ·ʔ",
    "ʕᴥ·ʔ",
    "ʕʘᴥʘʔ",
    "ʕง•ᴥ•ʔง",
    "ʕ•̼͛͡•ʕ-̺͛͡•ʔ•̮͛͡•ʔ",
    "ʕ༼◕ ౪ ◕✿ʔ",
    "ʕʽɞʼʔ",
    "ʕ•̀ω•́ʔ✧",
    "ʕง ͠° ͟ل͜ ͡°ʔง",
    // Unique Koala kaomojis
    "ʕ*ﾉᴥﾉʔ",
    "ʕಠᴥಠʔ",
    "ʕ◉ᴥ◉ʔ",
    "ʕᵔᴥᵔʔ",
    "ʕ>ᴥ<ʔ",
    "ʕ￫ᴥ￩ʔ",
    "ʕʘ̅͜ʘ̅ʔ",
    "ʕ´•ᴥ•`ʔ",
    "ʕ༼◕ ౪ ◕✿ʔ",
    "ʕʽɞʼʔ",
    "ʕง•ᴥ•ʔง",
  ], // Added comma here

  dog: [
    "∪･ω･∪",
    "∪＾ェ＾∪",
    "∪･ｪ･∪",
    "ヾ(｡･ω･｡)",
    "(●｀･(ｴ)･´●)",
    "Σ>―(〃°ω°〃)♡→",
    "U ´꓃ ` U",
    "(〓￣(∵エ∵)￣〓)",
    "U・♀・U",
    "(U・x・U)",
    "▼・ᴥ・▼",
    "V●ᴥ●V",
    "ฅ^•ﻌ•^ฅ",
    "U ´･ᴥ･` U",
    "(❍ᴥ❍ʋ)",
    "└(°ᴥ°)┘",
    "U^ｪ^U",
    "ｖ・。・Ｖ",
    "U^皿^U",
    "U･ᴥ･U",
    "(U・ᴥ・U)",
    "U｡･ｪ･｡U",
    "▼(´ᴥ`)▼",
    "Uo･ｪ･oU",
    "U ˒˒",
    "(U・x・U)",
    "∪￣ᴥ￣∪",
    "∪･ω･∪",
    "Uo‿･ｪ･‿oU",
    "ｏ（Ｕ・ω・）⊃",
    "(〓￣(∵エ∵)￣〓)",
    "U・♀・U",
    "(U・x・U)",
  ],

  rabbit: [
    "(/･ω･(-ω-)",
    "／(^ x ^=)＼",
    "／(^ x ^)＼",
    "／(･ × ･)＼",
    "／(=∩_∩=)＼",
    "／(v x v｡)人(｡v x v)＼",
    "／(=･ x ･=)＼",
    "／(^･ｪ･^)＼",
    "／(=∩_∩=)＼",
    "／(=⌒x⌒=)＼",
    "／(v x v)＼",
    "／(=´x`=)＼",
    "／(v x v｡)＼",
    "／(=✪ x ✪=)＼",
    "／(･ × ･)＼",
    "／(･ x ･)＼",
    "／(=⌒x⌒=)＼",
    "／(^･ω･^)＼",
    "／(=⌒x⌒=)＼",
    "／(=⌒x⌒=)＼",
    "／(｡v x v｡)＼",
    "／(=^･ｪ･^=)＼",
    "／(=^･ω･^=)＼",
    "／(=^･ｪ･^=)＼",
    "／(^ x ^)＼",
    "／(=⌒x⌒=)＼",
    "／(=✪ x ✪=)＼",
    "／(=´x`=)＼",
    "／(=･ x ･=)＼",
    "／(v x v)＼",
  ],

  panda: [
    "ヽ(￣(ｴ)￣)ﾉ",
    "( ´(ｴ)｀)",
    "／(･ × ･)＼",
    "(￣(エ)￣)",
    "ヾ(￣(エ)￣ヾ)",
    "(／(ｴ)＼)",
    "（´(ｪ)｀）",
    "(o(￣(ｴ)￣)o)",
    "ヾ(´(ｴ)｀ﾉﾞ",
    "ヽ(￣(ｴ)￣)ﾉ",
    "(๑￣(ｴ)￣๑)",
    "(／￣(ｴ)￣)／",
    "(/-(ｴ)-＼)",
    "(¬(ｴ)¬)",
    "ヾ(´(ｴ)｀ﾉﾞ",
    "(〇(ｴ)〇)",
    "(´(ｪ)｀)",
    "(￣(ｴ)￣)ﾉ",
    "(／￣(ｴ)￣)／",
    "(¬‿¬)",
    "（〃・(ｴ)・〃）",
    "(つ-(ｴ)-)つ",
    "(･(ｴ)･｡)",
    "(つ￣(ｴ)￣)つ",
    "(≧(ｴ)≦ )",
    "(o-(ｴ)-o)",
    "(*￣(ｴ)￣*)",
  ],

  owl: [
    "(๑•o•๑)",
    "▼o・ェ・o▼",
    "(o･(ェ)･o)",
    "＠・＊・＠",
    "▼・ᴥ・▼",
    "(o(エ)o)",
    "(￣(エ)￣)",
    "(Φ(エ)Φ)",
    "(ΦωΦ)",
    "(ΦзΦ)",
    "▼(エ)▼",
    "(o(ｪ)o)",
    "(Φ(エ)Φ)",
    "(*ΦωΦ*)",
    "(Φ(ｪ)Φ)",
    "(￣(ｴ)￣)ﾉ",
    "(Φ(エ)Φ)",
    "(Φ(エ)Φ)",
    "(*ΦωΦ*)",
    "(Φ(ｪ)Φ)",
    "(o(ｪ)o)",
    "(*Φ(エ)Φ*)",
    "(๑Φ(エ)Φ๑)",
    "(ΦωΦσ)σ",
    "(ΦзΦ)",
    "(ΦεΦ)",
  ],

  elephant: [
  "(¬(エ)¬)",
  "(っ・(エ)・)っ",
  "(*￣(エ)￣*)",
  "(◕(エ)◕)"
],

  fox: [ 
    "(๑ↀᆺↀ๑)✧",
  "/ᐠ｡ꞈ｡ᐟ\\",
  "(=ﾟωﾟ)ﾉ",
  "๏◡๏",
  "ᘳᗒᗨᗕᘰ"
],

  mouse: [
    "ʢ◉ᴥ◉ʡ",
    "(•ิ_•ิ)/",
    "ᘛᵒᴥᵒᘚ",
    "(=⌒‿‿⌒=)",
    "(=⌒‿‿⌒=)"
],

  pig: [
    "( ´(00)ˋ )",
    "(=｀(∞)´=)",
    "(´(00)ˋ)",
    "ʕ•͡(oo)•͡ʔ",
    "ʕ•͡(oo)•͡ʔ"
],

  duck:
  ["( •ө• )",
  "(._.)",
  "(•ө•)♡",
  "ㄟ( ･ө･ )ㄏ",
  "꜀( ˊ̠˂˃ˋ̠ )꜆"
],

  monkey: [
    "@(o･ｪ･o)@",
    "⊂((・⊥・))⊃",
    "⊂(ο･㉨･ο)⊃",
    "⊂(･ω･*⊂)",
    "⊂(・(ェ)・)⊃",
  ],

  sheep: [
    "ᏊˊꈊˋᏊ", 
    "Ꮚ˘̩̩̩ꍓ˘̩̩̩Ꮚ", 
    "ᏊˊꍓˋᏊ", 
    "ᏊᵔꈊᵔᏊ", 
    "Ꮚˊ̥̥̥̥̥̥ꈊˋ̥̥̥̥̥̥Ꮚ"
],
};

function displayKaomojis(type) {
    const kaomojiDisplay = document.getElementById('kaomoji-display');
    if (kaomojis[type]) {
        kaomojiDisplay.innerHTML = kaomojis[type].map(kaomoji => 
            `<button class="kaomoji-button" onclick="copyKaomojiToClipboard('${kaomoji}')">${kaomoji}</button>`
        ).join(' ');
    } else {
        kaomojiDisplay.innerText = 'No kaomojis found for this category';
    }
}

function copyKaomojiToClipboard(kaomoji) {
    navigator.clipboard.writeText(kaomoji).then(() => {
        // Show snackbar
        const snackbar = document.getElementById("snackbar");
        snackbar.className = "show";
        snackbar.innerText = `${kaomoji} copied to clipboard`;
        setTimeout(() => snackbar.className = snackbar.className.replace("show", ""), 3000);
    }).catch(err => {
        console.error('Error copying kaomoji to clipboard:', err);
    });
}
